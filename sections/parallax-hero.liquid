<style>
    @import url('https://fonts.cdnfonts.com/css/daggersquare');
    .parallax-inner-div {
        position: relative;
        width: 100%;
        height: 55vw;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        background-image: linear-gradient(to top, #909ea6, #e0cfbd, #9bacbe);
    }


    .parallax-inner-div a{
        color : white;
        font-family: 'DAGGERSQUARE', sans-serif;
        font-size: 5vw;
        text-decoration: none;
        opacity: 0.7;
        position: absolute;
        transition: transform 0.2s, opacity 0.2s;
        
    }

    .parallax-inner-div a:hover{
        transform: translateY(-1vw);
        opacity: 0.9;
    }

    .parallax-inner-div img{
        position: absolute;
        top:0;
        left:0;
        width: 100%;
        height: auto;
        object-fit: cover;
        pointer-events: none;
    }

    .parallax-layer {
        opacity: 0;
        transform: translateY(40%);
        transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    }
    
    .parallax-layer.visible {
        opacity: 1;
        transform: translateY(0);
    }
    
    

  
</style>
<div class="parallax-container">
    <div class="parallax-inner-div">
        <a href="#" class="text-parliament" id="text-behind-parliament">DISCOVER</a>
        <img 
            src="{{ section.settings.parallax_first_layer | image_url: width: 1500 }}" 
            loading="lazy" 
            alt="" 
            id="layer1" 
            class="parallax-layer"
        >
        
        <img 
            src="{{ section.settings.parallax_second_layer | image_url: width: 1500 }}" 
            loading="lazy" 
            alt="" 
            id="layer2" 
            class="parallax-layer"
        >
        
        <img 
            src="{{ section.settings.parallax_third_layer | image_url: width: 1500 }}" 
            loading="lazy" 
            alt="" 
            id="layer3" 
            class="parallax-layer"
        >
        
    </div>
</div>

<script>
    let parliament = document.getElementById("layer1");
    let parliamentText = document.getElementById("text-behind-parliament");
    let buildings = document.getElementById("layer2");
    let pillars = document.getElementById("layer3");
    let innerDiv = document.querySelector(".parallax-inner-div");
    const topValue = parseInt(window.getComputedStyle(parliamentText).top, 10) || 0;

    window.addEventListener('scroll', () => {
        var value = window.scrollY;


        parliamentText.style.top = (topValue + value*0.3) + 'px';
        parliament.style.top = value*0.30 + 'px';
        buildings.style.top = value*0.15 + 'px';
    })

    document.addEventListener("DOMContentLoaded", () => {
        const layers = document.querySelectorAll(".parallax-layer");
        const total = layers.length;
        
        layers.forEach((img, index) => {
            if (img.complete) {
                addVisibleClass(img, index);
            } else {
                img.addEventListener("load", () => addVisibleClass(img, index));
            }
        });
    
        function addVisibleClass(img, index) {
            setTimeout(() => {
                img.classList.add("visible");
            }, (total - index - 1) * 200); 
        }
    });
    
    
    
</script>

{% schema %}
    {
        "name": "Parallax Hero Section",
        "class": "parallax-hero",
        "settings": [
            {
                "type": "image_picker",
                "id": "parallax_first_layer",
                "label": "Layer 1"
            },
            {
                "type": "image_picker",
                "id": "parallax_second_layer",
                "label": "Layer 2"
            },
            {
                "type": "image_picker",
                "id": "parallax_third_layer",
                "label": "Layer 2"
            }
        ],
        "blocks": [],
        "presets": [
            {
                "name": "Parallax Hero",
                "settings": {}
            }
        ]
    }
{% endschema %}
